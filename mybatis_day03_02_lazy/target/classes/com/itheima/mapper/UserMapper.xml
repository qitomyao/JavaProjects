<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.itheima.mapper.UserMapper">

    <!--单个mapper也要设置开启二级缓存-->
    <cache />
    <select id="selectAll" resultType="User">
        select * from user;
    </select>

    <!--
    resultMap标签:当数据库字段名和类的成员变量名不一致的时候，作为封装对象的映射关系使用
    包括，属性中有别的对象成员变量的时候
    id:唯一标识
    做多表查询的时候，最好把每个字段都映射上，避免出现字段名相同的情况

    id标签:主键字段 column数据库的字段名 property类的成员变量名
    result标签:除主键之外的字段

    association标签:做一对一关联映射
    property属性:类的成员变量名
    resultMap属性:成员变量对应的对象映射关系

    collection标签:做一对多关系映射
    -->
    <resultMap id="UserMap" type="User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="birthday" property="birthday" />
        <result column="sex" property="sex" />
        <result column="address" property="address" />
        <!--级联查询UserInfo表的数据
        select:配置一个查询方法
        column:select对应的查询方法的参数
        --><!--
        懒加载机制
        fetchType:配置是否懒加载
        eager:默认值，表示一起查询
        lazy:懒加载，没有使用的时候，不会执行SQL
        -->
        <association property="infoData" select="selectInfoById"
                     column="id" fetchType="eager" />
    <!--级联查询Order表的数据 -->
        <collection property="orderList" select="selectOrdersByUid"
                    column="id" fetchType="lazy"/>
</resultMap>
<!-- 根据id查询用户信息-->
    <select id="selectById" resultMap="UserMap">
        select * from user where id = #{id};
    </select>

    <!--根据用户id查询Order订单信息-->
    <select id="selectOrdersByUid" resultType="com.itheima.pojo.Order">
        select * from `order` where user_id = #{id}
    </select>


    <!--    根据id查询用户的扩展信息-->
    <select id="selectInfoById" resultType="com.itheima.pojo.UserInfo">
        select * from user_info where id = #{id}
    </select>
</mapper>